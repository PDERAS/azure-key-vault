<?php

namespace Pderas\AzureKeyVault\Services;

use Carbon\Carbon;
use Illuminate\Support\Arr;
use Illuminate\Support\Facades\Process;

class AzureTokenProvider
{
    /**
     * Whether to use the Azure CLI to generate the access token
     */
    protected bool $use_azure_cli = false;

    /**
     * The access token generated by Azure Key Vault
     */
    protected ?string $token = null;

    /**
     * The expiry date of the Access Token
     */
    protected Carbon $token_expiry;

    public function __construct()
    {
        $this->use_azure_cli = config('azure_vault.use_azure_cli', false);
    }

    /**
     * Retrieve an access token from Azure Key Vault
     */
    public function getAccessToken(): string
    {
        if ($this->token && $this->token_expiry->isFuture()) {
            return $this->token;
        }

        if ($this->use_azure_cli) {
            return $this->getTokenViaCli();
        } else {
            // TODO: Implement Managed Identity
            throw new \RuntimeException('Managed Identity is not implemented yet. Please set `use_azure_cli` to true in the config.');
        }
    }

    /**
     * Get the access token using the Azure CLI.
     */
    private function getTokenViaCli(): string
    {
        $azure_cli_result = Process::run('az account get-access-token --resource https://vault.azure.net');
        $token_output = json_decode($azure_cli_result->output(), true);

        $this->token = Arr::get($token_output, 'accessToken');
        $this->token_expiry = Carbon::parse(Arr::get($token_output, 'expiresOn'));

        return $this->token;
    }
}